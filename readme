# WATR_MudMeter             
## Description
- A system allowing data collection from a Campbell scientific datalogger using
  a Raspebrry Pi and Python.
  
  As a requirement of the client, the program needs to provide real-time data 
  streaming. This originally meant the chart was to be updated as frequently 
  as possible.   

  However, due to the client's data restrictions, it was decided, instead of
  live-streaming the data, to upload and refresh the data every hour instead. With this 
  decision, the streaming charts were re-implemented as a static html file, 
  building the charts from the uploaded data.

  The original, live-streaming implementation can still be found under my CampbellDataStreaming
  repository.

## Requirements:
- A device capable of running Python
- Python library Paramiko
- Python library PyCampbellCR1000 (https://pycampbellcr1000.readthedocs.org/en/latest/)
- Internet Connection (I'm using a Verizon Jetpack hotspot)
- A serial port to connect to the Campbell logger
---- A USB->RS232 converter may be substituted if drivers exist for the device.

This project has been implemented using a Raspberry Pi v2

## Repository Layout:
   _____________________________________________________________________________________
   | -DataCollection <- Forked from CampbellDataCollection repository                  | 
   | |-DataCollection.py    <- Final implementation - collect data from logger, parse  |
   | |                          data, and uploads to server for later analysis and     |
   | |                          visualization.                                         |
   | -Web                   <- Holds the user-facing website                           |
   | |-assets               <- Holds bootstrap assets and files used by website.       |
   | |-css                  <- Holds website's css files.                              |
   | |-fonts                <- Holds fonts used by website.                            |
   | |-img                  <- Holds images used by website.                           |
   | |-js                   <- Holds javascript files used by website.                 |
   | |-about.html           <- Displays general information about the site to the user.|
   | |-getCSV.php           <- Generates a CSV file from the database based upon       |
   | |                         arguments provided. Can select table, order, and        |
   | |                         max number of rows.                                     |
   | |-getJSON.php          <- Similar to getCSV, but returns JSON representation      |
   | |                         rather than CSV.                                        |
   | |-index.html           <- Website entry point, displays data plots to user.       |
   | |-rawdata.html         <- Displays the raw data to a user, via the getCSV script. |
   |___________________________________________________________________________________|
